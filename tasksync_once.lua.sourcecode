if not Tasksync then 
	Tasksync = setmetatable({},{})
end
if not Tasksync._initialized_tasksync_once then 
Tasksync._initialized_tasksync_once = true 
Tasksync._jobNames_tasksync_once = {}
Tasksync._jobTodo_tasksync_once = {}
Tasksync._jobTodoEnd_tasksync_once = {}
Tasksync._debug = false
local resourceName = GetCurrentResourceName()
local _getAmountsOfLoopType = function(style)
		local nowTable
		if style == "loop" then 
			nowTable = (Tasksync.tasksjob)
		elseif style == "loopcustom" then  
			nowTable = (Tasksync.tasksjob_custom)
		elseif style == "looponce" then  
			nowTable = (Tasksync._jobNames_tasksync_once)
		end 
		local total = 0 
		for i,v in pairs(nowTable) do 
			local n = #v
			total = total + n
		end
		return total 
end 
AddEventHandler("Tasksync:ShowDebug",function(resourcename)
	Tasksync._debug = not Tasksync._debug 
end)
Tasksync.__createDepartmentGardenOnce = function(durationGroup)
	CreateThread(function()
		local todo = Tasksync._jobTodo_tasksync_once
		local jobGroup_once = Tasksync._jobNames_tasksync_once[durationGroup]
		local duration = tonumber(durationGroup)
		local isAnyJob = function() 
			return jobGroup_once[1]
		end
		while isAnyJob() do 
			local debugtext = {}
			for i=1,#jobGroup_once do 
				local jobname = jobGroup_once[i]
				local fn = todo[jobname]
				if Tasksync._debug and jobname then 
					table.insert(debugtext,resourceName.." (looponce) "..jobname.." "..durationGroup) 
				end
				if fn then fn() end 
			end 
			if Tasksync._debug then 
				for i,v in pairs(debugtext) do 
					print(v)
				end 
				print("Once Loop Total",_getAmountsOfLoopType("looponce"))
				print("Spaming after 3 seconds") Wait(3000)
			end 
			 
			Wait(duration)
		end 
		--if true then  print('breaked'..durationGroup) end
		return 
	end)
end 	
Tasksync.addlooponce = function(jobname,durationGroup,fn_todo,fn_todoend) --jobname,duration,function
	local durationGroup = tostring(durationGroup)
	local JobExisted = false 
	if Tasksync._jobNames_tasksync_once[durationGroup] and #Tasksync._jobNames_tasksync_once[durationGroup] > 0 then 
		for i=1,#Tasksync._jobNames_tasksync_once[durationGroup] do 
			if Tasksync._jobNames_tasksync_once[durationGroup][i] == jobname then 
				JobExisted = true 
			end 
		end 
	end 
	if not JobExisted then 
		Tasksync._jobTodo_tasksync_once[jobname] = fn_todo
		if fn_todoend then 
			Tasksync._jobTodoEnd_tasksync_once[jobname] = fn_todoend
		end 
		if Tasksync._jobNames_tasksync_once[durationGroup] == nil then  
			Tasksync._jobNames_tasksync_once[durationGroup] = {}; 
			table.insert(Tasksync._jobNames_tasksync_once[durationGroup],jobname)
			Tasksync.__createDepartmentGardenOnce(durationGroup)
		else 
			table.insert(Tasksync._jobNames_tasksync_once[durationGroup],jobname)
		end 
	end 
end 
Tasksync.insertlooponce = Tasksync.addlooponce
Tasksync.deletelooponce = function(jobname)
	for durationGroup,v in pairs(Tasksync._jobNames_tasksync_once) do 
		for i=1,#Tasksync._jobNames_tasksync_once[durationGroup] do 
			if Tasksync._jobNames_tasksync_once[durationGroup][i] == jobname then 
				if Tasksync._jobTodoEnd_tasksync_once[jobname] then Tasksync._jobTodoEnd_tasksync_once[jobname]() end 
				Tasksync._jobTodoEnd_tasksync_once[jobname] = nil 
				Tasksync._jobTodo_tasksync_once[jobname] = nil 
				table.remove(Tasksync._jobNames_tasksync_once[durationGroup],i)
				if #Tasksync._jobNames_tasksync_once[durationGroup] == 0 then 
					Tasksync._jobNames_tasksync_once[durationGroup] = nil
				end 
			end 
		end 
	end 
end 
end 