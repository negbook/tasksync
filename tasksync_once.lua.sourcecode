if not Tasksync then 
	Tasksync = setmetatable({},{})
end
if not Tasksync._initialized_tasksync_once then 
Tasksync._initialized_tasksync_once = true 
Tasksync._LoopsOnce = {{},{},{}}
local LoopsGroup = Tasksync._LoopsOnce[1]
local LoopsTodoFn = Tasksync._LoopsOnce[2]
local LoopsTodoFnWhenBreak = Tasksync._LoopsOnce[3]
Tasksync._debug = false
local resourceName = GetCurrentResourceName()
local _getAmountsOfLoopType = function()
		local nowTable = (LoopsGroup)
		local total = 0 
		for i,v in pairs(nowTable) do 
			local n = #v
			total = total + n
		end
		return total 
end 
AddEventHandler("Tasksync:ShowDebug",function(resourcename)
	Tasksync._debug = not Tasksync._debug 
end)
Tasksync.__createDepartmentGardenOnce = function(duration)
	CreateThread(function()
		local todo = LoopsTodoFn
		local jobGroup_once = LoopsGroup[duration]
		local duration = tonumber(duration)
		local e = {}
		
		repeat 
			local loc_jobgroup_once =  (jobGroup_once or e)
			local isAnyJob = loc_jobgroup_once[1]
			if isAnyJob then
				local debugtext = {}
				for i=1,#loc_jobgroup_once do 
					local jobname = loc_jobgroup_once[i]
					local fn = jobname and todo[jobname]
					if fn then fn() end
					if Tasksync._debug and jobname then 
						table.insert(debugtext,resourceName.." (looponce) "..jobname.." "..duration) 
					end
				end 
				if Tasksync._debug then 
					for i,v in pairs(debugtext) do 
						print(v)
					end 
					print("Once Loop Total",_getAmountsOfLoopType())
					print("Spaming after 3 seconds") Wait(3000)
				end 
			end 
			Wait(duration)
		until not isAnyJob
		return 
	end)
end 	
Tasksync.addlooponce = function(jobname,duration,fn_todo,fn_todoend) --jobname,duration,function
	local duration = tostring(duration)
	local JobExisted = false 
	if LoopsGroup[duration] and #LoopsGroup[duration] > 0 then 
		for i=1,#LoopsGroup[duration] do 
			if LoopsGroup[duration][i] == jobname then 
				JobExisted = true 
			end 
		end 
	end 
	if not JobExisted then 
		LoopsTodoFn[jobname] = fn_todo
		if fn_todoend then 
			LoopsTodoFnWhenBreak[jobname] = fn_todoend
		end 
		if LoopsGroup[duration] == nil then  
			LoopsGroup[duration] = {}; 
			table.insert(LoopsGroup[duration],jobname)
			Tasksync.__createDepartmentGardenOnce(duration)
		else 
			table.insert(LoopsGroup[duration],jobname)
		end 
	end 
end 
Tasksync.insertlooponce = Tasksync.addlooponce
Tasksync.deletelooponce = function(jobname)
	for duration,v in pairs(LoopsGroup) do 
		for i=1,#LoopsGroup[duration] do 
			if LoopsGroup[duration][i] == jobname then 
				if LoopsTodoFnWhenBreak[jobname] then LoopsTodoFnWhenBreak[jobname]() end 
				LoopsTodoFnWhenBreak[jobname] = nil 
				LoopsTodoFn[jobname] = nil 
				table.remove(LoopsGroup[duration],i)
				if #LoopsGroup[duration] == 0 then 
					LoopsGroup[duration] = nil
				end 
			end 
		end 
	end 
end 
end 