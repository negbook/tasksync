local switch=setmetatable({},{__call=function(a,b)_G.case=setmetatable({},{__call=function(a,...)return a[{...}]end,__index=function(a,c)local d=false;if c and type(c)=="table"then for e=1,#c do local f=c[e]if f and b and f==b then d=true;break end end end;if d then return setmetatable({},{__call=function(a,g)_G.default=setmetatable({},{__call=function(a,h)end})return g()end})else return function()end end end})_G.default=setmetatable({},{__call=function(a,b)if b and type(b)=="function"then return b()end end})return a[b]end,__index=function(a,f)return setmetatable({},{__call=function(a,...)local i={...}for j=1,#i do local k=i[j]if k~=nil then return k end end;return nil end})end})
load(LoadResourceFile("tasksync", 'tasksync_once.lua.sourcecode'))()
if not Tasksync._initialized_tasksync_with_drawmenu then 
Tasksync._initialized_tasksync_with_drawmenu = true 
local _menudraw_ = {
	Glare = false ,
	Buttons = {},
	ButtonDescriptions = {},
	Title = "",
	Subtitle = "",
	Maxslot = 7,
	ShouldScroll = false,
	ButtonIcons = {},
	ButtonOptions = {},
	MenuSlotSelection = {},
	Selection = 1
}
load(LoadResourceFile("tasksync", 'tasksync_with_keys.lua.sourcecode'))()
local shared_cb = function(input)
	local action = {}
	action["up"] = function()
		local selection = Tasksync.MenuDrawGetFocusSlot() 
		PlaySound(-1, "NAV_UP_DOWN", "HUD_FRONTEND_DEFAULT_SOUNDSET", 0, 0, 1)
		local newselection = Tasksync.MenuDrawSetFocusSlot(selection - 1)
		return newselection
	end 
	action["down"] = function()
		local selection = Tasksync.MenuDrawGetFocusSlot() 
		PlaySound(-1, "NAV_UP_DOWN", "HUD_FRONTEND_DEFAULT_SOUNDSET", 0, 0, 1)
		local newselection = Tasksync.MenuDrawSetFocusSlot(selection + 1)
		return newselection
	end 
	--[[
	action["left"] = function()
		local slot =  Tasksync.MenuDrawGetFocusSlot()
		local selection = Tasksync.MenuDrawGetSlotSelection(slot) 
		PlaySound(-1, "NAV_LEFT_RIGHT", "HUD_FRONTEND_DEFAULT_SOUNDSET", 0, 0, 1)
		local newselection = Tasksync.MenuDrawSetSlotSelection(slot,selection - 1)
		return newselection
	end 
	
	action["right"] = function()
		local slot =  Tasksync.MenuDrawGetFocusSlot()
		local selection = Tasksync.MenuDrawGetSlotSelection(slot) 
		PlaySound(-1, "NAV_LEFT_RIGHT", "HUD_FRONTEND_DEFAULT_SOUNDSET", 0, 0, 1)
		local newselection = Tasksync.MenuDrawSetSlotSelection(slot,selection + 1)
		return newselection
	end 
	--]]
	action["mouse_click"] = function()
		local newselection 
		local mslot = Tasksync.GetMouseHoverSlot()
		if mslot ~= -1 then 
			local slot =  Tasksync.MenuDrawGetFocusSlot()
			if mslot == slot then 
				local selection = Tasksync.MenuDrawGetSlotSelection(slot) 
				PlaySound(-1, "NAV_LEFT_RIGHT", "HUD_FRONTEND_DEFAULT_SOUNDSET", 0, 0, 1)
				--newselection = Tasksync.MenuDrawSetSlotSelection(slot,selection + 1)
			else 
				Tasksync.MenuDrawSetFocusSlot(mslot)
				PlaySound(-1, "NAV_UP_DOWN", "HUD_FRONTEND_DEFAULT_SOUNDSET", 0, 0, 1)
			end 
		end 
		return newselection
	end 
	
	action["return"] = function()
		PlaySound(-1, "SELECT", "HUD_FRONTEND_DEFAULT_SOUNDSET", 0, 0, 1)
		return 1
	end 
	action["back"] = function()
		PlaySound(-1, "SELECT", "HUD_FRONTEND_DEFAULT_SOUNDSET", 0, 0, 1)
		return 1
	end 
	return action[input] and action[input]()
end

Tasksync.RegisterKeyTable{
	group = "GROUP_TASKSYNC_DRAWMENU",
	keys = {
		--{"TAB","THIS IS MENU TAB"},
		{"BACK","THIS IS MENU BACK"},
		{"SPACE","THIS IS MENU SPACE"},
		{"ESCAPE","THIS IS MENU ESCAPE"},
		{"RETURN","THIS IS MENU RETURN"},
		{"UP","THIS IS MENU UP",500,50},
		{"DOWN","THIS IS MENU DOWN",500,50},
		{"LEFT","THIS IS MENU LEFT",500,50},
		{"RIGHT","THIS IS MENU RIGHT",500,50},
		
		{"MOUSE_LEFT","THIS IS MENU MOUSE_LEFT","MOUSE_BUTTON"},
		{"MOUSE_RIGHT","THIS IS MENU MOUSE_RIGHT","MOUSE_BUTTON"},
		{"IOM_WHEEL_UP","THIS IS MENU IOM_WHEEL_UP","MOUSE_BUTTON"},
		{"IOM_WHEEL_DOWN","THIS IS MENU IOM_WHEEL_DOWN","MOUSE_BUTTON"},
		
		
		{"LUP_INDEX","THIS IS MENU LUP_INDEX",500,50,"PAD_DIGITALBUTTON"},
		{"LDOWN_INDEX","THIS IS MENU LDOWN_INDEX",500,50,"PAD_DIGITALBUTTON"},
		{"LLEFT_INDEX","THIS IS MENU LLEFT_INDEX",500,50,"PAD_DIGITALBUTTON"},
		{"LRIGHT_INDEX","THIS IS MENU LRIGHT_INDEX",500,50,"PAD_DIGITALBUTTON"},
		{"RDOWN_INDEX","THIS IS MENU RDOWN_INDEX","PAD_DIGITALBUTTON"},
		{"RRIGHT_INDEX","THIS IS MENU RRIGHT_INDEX","PAD_DIGITALBUTTON"},

		
	},
	cbs = {
		{"BACK","JUST_PRESSED",shared_cb,"back"},
		{"UP","JUST_PRESSED",shared_cb,"up"},
		{"DOWN","JUST_PRESSED",shared_cb,"down"},
		{"LEFT","JUST_PRESSED",shared_cb,"left"},
		{"RIGHT","JUST_PRESSED",shared_cb,"right"},
		{"SPACE","JUST_PRESSED",shared_cb,"return"},
		{"RETURN","JUST_PRESSED",shared_cb,"return"},
		{"UP","PRESSED",shared_cb,"up"},
		{"DOWN","PRESSED",shared_cb,"down"},
		{"LEFT","PRESSED",shared_cb,"left"},
		{"RIGHT","PRESSED",shared_cb,"right"},
		
		{"MOUSE_LEFT","JUST_PRESSED",shared_cb,"mouse_click"},
		{"MOUSE_RIGHT","JUST_PRESSED",shared_cb,"back"},
		
		{"IOM_WHEEL_UP","JUST_PRESSED",shared_cb,"up"},
		{"IOM_WHEEL_DOWN","JUST_PRESSED",shared_cb,"down"},
		
		{"LUP_INDEX","JUST_PRESSED",shared_cb,"up"},
		{"LDOWN_INDEX","JUST_PRESSED",shared_cb,"down"},
		{"LLEFT_INDEX","JUST_PRESSED",shared_cb,"left"},
		{"LRIGHT_INDEX","JUST_PRESSED",shared_cb,"right"},
		{"LUP_INDEX","PRESSED",shared_cb,"up"},
		{"LDOWN_INDEX","PRESSED",shared_cb,"down"},
		{"LLEFT_INDEX","PRESSED",shared_cb,"left"},
		{"LRIGHT_INDEX","PRESSED",shared_cb,"right"},
		{"RDOWN_INDEX","JUST_PRESSED",shared_cb,"return"},
		{"RRIGHT_INDEX","JUST_PRESSED",shared_cb,"back"},
	}
}
Tasksync.SetKeyGroupActive("GROUP_TASKSYNC_DRAWMENU",false)
local menuWidth = 0.256
local titleHeight = 0.091
local buttonHeight = 0.038
local buttonRectHeight = 0
local buttonFont = 0
local buttonScale = 0.365
local buttonTextXOffset = 0.005
local buttonTextYOffset = 0.005
local basicx = 0.085
local basicy = 0.115
local getmenuWidth = function() 
	return menuWidth 
end 
local basicRectDrawingX = (basicx + getmenuWidth() / 2)
local basicbuttony = (basicy + titleHeight + buttonTextYOffset)
local basicfont = 0
local buttonTransparent = 140
local lastY
local function _ResetRects(y)
	lastY = y
end 
local function _drawMenuRect(height, color, offsetY, alpha)
	local y = lastY + (offsetY or 0.0)
	local r,g,b,a = GetHudColour(color)
    DrawRect(basicRectDrawingX, y + height / 2, getmenuWidth(), height, r, g, b, (alpha or a))
	lastY = y + height 
	return lastY
end
local function _drawMenuSprite(sprite, height, color, offsetY, alpha)
	local y = lastY + (offsetY or 0.0)
	local r,g,b,a = GetHudColour(color)
    DrawSprite("CommonMenu", sprite ,basicRectDrawingX,y + height / 2,getmenuWidth(), height,0, r, g, b, (alpha or a))
	lastY = y + height 
	return lastY
end
local function _drawMenuRectHighLight(y, height, color, offsetY, alpha)
	local r,g,b,a = GetHudColour(color)
	DrawRect(basicRectDrawingX, y + height / 2, getmenuWidth(), height, r, g, b, (alpha or a))
end
local function _drawMenuSpriteHighLight(y, height, color, offsetY, alpha)
	local r,g,b,a = GetHudColour(color)
	DrawSprite("CommonMenu", "Gradient_Nav",basicRectDrawingX,y + height / 2,getmenuWidth(),height,0, r,g,b,(alpha or a))
end
local function _drawTextXY(text,x,y,color,font,scale)
	SetTextColour(GetHudColour(color))
    SetTextFont(font)
    SetTextScale(scale, scale)
	BeginTextCommandDisplayText("STRING")
    AddTextComponentSubstringPlayerName(text)
    return EndTextCommandDisplayText(x, y)
end 
local function _drawMenuText(text, x, y, font, color, scale)
    _drawTextXY(text, x + buttonTextXOffset, y, color,font,scale)
end
local function _drawMenuTextShadow(text, x, y, font, color, scale)
    SetTextDropShadow(2, 2, 0, 0, 0)
    _drawTextXY(text, x + buttonTextXOffset, y, color,font,scale)
end
local function _drawMenuText_Right(text, x, y, font, color, scale)
    SetTextWrap(basicx, basicx + getmenuWidth() - buttonTextXOffset)
    SetTextRightJustify(true)
    _drawTextXY(text, x, y, color,font,scale)
end
local function _drawTextCenter(text, x, y, font, color, scale, shadow, alignRight)
    if shadow then
        SetTextDropShadow(2, 2, 0, 0, 0)
    end
    SetTextCentre(center)
    _drawTextXY(text, x, y, color,font,scale)
end
local function _drawMenuTextArray(text, x, y, font, color, scale,showArrow)
	--SetTextColour(GetHudColour(color))
    SetTextFont(font)
    SetTextScale(scale, scale)
	BeginTextCommandGetWidth("STRING")
	AddTextComponentSubstringPlayerName(text)
	local width = EndTextCommandGetWidth(true)
	if showArrow then 
		local iconRight = "arrowright"
		local iconLeft = "arrowleft"
		local height = 0.032 
		DrawSprite("CommonMenu", iconLeft ,x + getmenuWidth() - width - (buttonTextXOffset * 4),y + height / 2, height/GetAspectRatio(), height,0, GetHudColour(color))
		_drawTextXY(text, x + getmenuWidth() - width - (buttonTextXOffset * 3), y, color, font, scale)
		DrawSprite("CommonMenu", iconRight ,x + getmenuWidth() - (buttonTextXOffset * 2),y + height / 2, height/GetAspectRatio(), height,0, GetHudColour(color))
	else 
		_drawTextXY(text, x + getmenuWidth() - width - (buttonTextXOffset * 3), y, color, font, scale)
	end 
end 
local function _drawMenuIcon_Right(y,iconName)
	if iconName then 
		DrawSprite("CommonMenu", iconName ,basicx + getmenuWidth() - (buttonTextXOffset * 4),y + buttonHeight / 2, buttonHeight/GetAspectRatio(), buttonHeight,0, GetHudColour(color))
	end 
end 
local _drawButton = function(y,text,righttext,optionselected,icon,selection,slot)
	local ishighlight = selection == slot
	
	local ishoverd = false 
	if _menudraw_.ShowMouse then 
		ishoverd = _menudraw_.MouseHoverSlot == slot 
	end 
	local r = {}
	r.x = basicx
	r.y = y
	r.width = getmenuWidth()
	r.height = buttonHeight
	if ishighlight then 
		_drawMenuSpriteHighLight(y ,buttonHeight, 0, 0.0, 255)
		_drawMenuText(text,basicx,y,buttonFont,2,buttonScale, true)
		if righttext and icon then 
			_drawMenuTextArray(righttext[optionselected],basicx - buttonTextXOffset*4,y,buttonFont,2,buttonScale,#righttext > 1 and true or false)
			_drawMenuIcon_Right(y,icon)
		else 
			if righttext then 
				_drawMenuTextArray(righttext[optionselected],basicx,y,buttonFont,2,buttonScale,#righttext > 1 and true or false)
			end 
			if icon then 
				_drawMenuIcon_Right(y,icon)
			end 
		end 
	elseif ishoverd then 
		_drawMenuSpriteHighLight(y ,buttonHeight, 3, 0.0, 180)
		_drawMenuText(text,basicx,y,buttonFont,2,buttonScale, false)
		if righttext and icon then 
			_drawMenuTextArray(righttext[optionselected],basicx - buttonTextXOffset*4,y,buttonFont,2,buttonScale,#righttext > 1 and true or false)
			_drawMenuIcon_Right(y,icon)
		else 
			if righttext then 
				_drawMenuTextArray(righttext[optionselected],basicx,y,buttonFont,2,buttonScale,#righttext > 1 and true or false)
			end 
			if icon then 
				_drawMenuIcon_Right(y,icon)
			end 
		end 
	else 
		_drawMenuText(text,basicx,y,buttonFont,0,buttonScale, false)
		if righttext and icon then 
			_drawMenuTextArray(righttext[optionselected],basicx - buttonTextXOffset*4,y,buttonFont,0,buttonScale,#righttext > 1 and true or false)
			_drawMenuIcon_Right(y,icon)
		else 
			if righttext then 
				_drawMenuTextArray(righttext[optionselected],basicx,y,buttonFont,0,buttonScale,#righttext > 1 and true or false)
			end 
			if icon then 
				_drawMenuIcon_Right(y,icon)
			end 
		end 
	end 
	return r.x,r.y,r.width,r.height
end 
local _initMenuScroll = function()
	DrawSprite("CommonMenu", "shop_arrows_upANDdown", basicRectDrawingX, _drawMenuRect(buttonHeight, 140, 0.002, 220) - buttonHeight / 2, 0.032, buttonHeight, 0, GetHudColour(0));
end 
local _setMenuDescription = function(desc)
	if desc then 
		_drawMenuRect(0.0015, 2, 0.0050, 255)
		_drawMenuText(desc,basicx,_drawMenuSprite("Gradient_Bgd", buttonHeight, 0, 0.0, 255)-buttonHeight + 0.0025,buttonFont,0,buttonScale)
	end 
end 

Tasksync.MenuDrawSetButtons = function(...)
	if not _menudraw_.Buttons then _menudraw_.Buttons = {} end 
	_menudraw_.Buttons = {...}
	if #_menudraw_.Buttons > _menudraw_.Maxslot then _menudraw_.ShouldScroll = true 
	else _menudraw_.ShouldScroll = false  end 
	if not Tasksync.MenuDrawGetFocusSlot() then 
		Tasksync.MenuDrawSetFocusSlot(1)
	end 

end 
Tasksync.MenuDrawGetButtons = function()
	return _menudraw_.Buttons 
end 
Tasksync.MenuDrawSetButtonDescription = function(slot,description)
	if not _menudraw_.ButtonDescriptions then _menudraw_.ButtonDescriptions = {} end 
	_menudraw_.ButtonDescriptions[slot] = description
end 
Tasksync.MenuDrawSetButtonOptions = function(slot,...)
	if not _menudraw_.ButtonOptions then _menudraw_.ButtonOptions = {} end 
	_menudraw_.ButtonOptions[slot] = {...}
	if not Tasksync.MenuDrawGetSlotSelection(slot) then 
		Tasksync.MenuDrawSetSlotSelection(slot, 1)
	end 
end 
Tasksync.MenuDrawGetButtonOptions = function(slot)
	local bdo = _menudraw_.ButtonOptions
	local bdov = _menudraw_.MenuSlotSelection
	return bdo and bdo[slot],bdov and bdov[slot] or 1
end 
Tasksync.MenuDrawGetButtonDescription = function(slot)
	local bds = _menudraw_.ButtonDescriptions
	return bds and bds[slot]
end 
Tasksync.MenuDrawSetButtonIcon = function(slot,iconName)
	if not _menudraw_.ButtonIcons then _menudraw_.ButtonIcons = {} end 
	_menudraw_.ButtonIcons[slot] = iconName
end 
Tasksync.MenuDrawGetButtonIcon = function(slot)
	local bdicon = _menudraw_.ButtonIcons
	return bdicon and bdicon[slot]
end 
Tasksync.MenuDrawSetSlotSelection = function(slot,selection_x)
	if not _menudraw_.MenuSlotSelection then _menudraw_.MenuSlotSelection = {} end 
	local options = Tasksync.MenuDrawGetButtonOptions(slot)
	if options then 
		if options and #options >= 1 then 
		
			if selection_x <= 0 then 
				selection_x = (selection_x-1)%#options+1
			elseif selection_x > #options then 
				selection_x = selection_x%#options
				if selection_x <= 0 then 
					selection_x = (selection_x-1)%#options+1
				end 
			end 
		end 
	else 
		selection_x = 1
	end 
	_menudraw_.MenuSlotSelection[slot] = selection_x 
	return _menudraw_.MenuSlotSelection[slot] 
end 
Tasksync.MenuDrawGetSlotSelection = function(slot)
	local slotselection = _menudraw_.MenuSlotSelection and _menudraw_.MenuSlotSelection and _menudraw_.MenuSlotSelection[slot]
	return slotselection
end 
Tasksync.MenuDrawSetFocusSlot = function(y)
	local buttons = Tasksync.MenuDrawGetButtons()
	--if not x then x = 1 end  
	if not y then y = 1 end 
	if buttons and #buttons >= 1 then  
		if y <= 0 then 
			y = (y-1)%#buttons+1
		elseif y > #buttons then 
			y = y%#buttons
			if y <= 0 then 
				y = (y-1)%#buttons+1
			end 
		end 
		
	end 
	_menudraw_.Selection = y
	return _menudraw_.Selection
end 
Tasksync.MenuDrawGetFocusSlot = function()
	local selection = _menudraw_.Selection
	return selection
end 
Tasksync.MenuDrawGetGlared = function()
	local Glare = _menudraw_.Glare
	return Glare
end 
Tasksync.MenuDrawEnd = function()
	Tasksync.deletelooponce("tasksync_drawmenu")
end 
Tasksync.MenuEnd = Tasksync.MenuDrawEnd
Tasksync.MenuCheckGlare = function(isglare)
	if isglare then  
		if not _menudraw_.showedGlare then 
			_menudraw_.showedGlare = true 
			CreateThread(function()
				load(LoadResourceFile("tasksync", 'tasksync_with_scaleform.lua.sourcecode'))()
				Tasksync.ScaleformDraw("MP_MENU_GLARE",function(initialise,ondraw)
					initialise("SET_DATA_SLOT",0.5,true)
					
				end, 5,76,84,0.05,0.05,0.0,0.0)
				
			end)
		end 
	elseif _menudraw_.showedGlare and Tasksync.ScaleformEnd then 
		Tasksync.ScaleformEnd("MP_MENU_GLARE")
		_menudraw_.showedGlare = false 
	end 
end 
Tasksync.MenuDrawInitMouse = function(title,subtitle,maxslot)
	local maxslot = maxslot or 7
	_menudraw_ = {
		Glare = false ,
		Buttons = {},
		ButtonDescriptions = {},
		Title = "",
		Subtitle = "",
		Maxslot = 7,
		ShouldScroll = false,
		ButtonIcons = {},
		ButtonOptions = {},
		MenuSlotSelection = {},
		ShowMouse = false,
		MouseHoverSlot = -1,
		Selection = 1
	}
	_menudraw_.Maxslot =  maxslot
	_menudraw_.Title = title
	_menudraw_.Subtitle = subtitle
	_menudraw_.ShowMouse = true
	Tasksync.MenuCheckGlare(_menudraw_.Glare)
end 
Tasksync.MenuDrawInit = function(title,subtitle,maxslot)
	local maxslot = maxslot or 7
	_menudraw_ = {
		Glare = false ,
		Buttons = {},
		ButtonDescriptions = {},
		Title = "",
		Subtitle = "",
		Maxslot = 7,
		ShouldScroll = false,
		ButtonIcons = {},
		ButtonOptions = {},
		MenuSlotSelection = {},
		ShowMouse = false,
		MouseHoverSlot = -1,
		Selection = 1
	}
	_menudraw_.Maxslot =  maxslot
	_menudraw_.Title = title
	_menudraw_.Subtitle = subtitle
	Tasksync.MenuCheckGlare(_menudraw_.Glare)
end 
Tasksync.MenuDrawInitGlare = function(title,subtitle,maxslot)
	local maxslot = maxslot or 7
	_menudraw_ = {
		Glare = false ,
		Buttons = {},
		ButtonDescriptions = {},
		Title = "",
		Subtitle = "",
		Maxslot = 7,
		ShouldScroll = false,
		ButtonIcons = {},
		ButtonOptions = {},
		MenuSlotSelection = {},
		ShowMouse = false,
		MouseHoverSlot = -1,
		Selection = 1
	}
	_menudraw_.Glare = true
	_menudraw_.Maxslot =  maxslot
	_menudraw_.Title = title
	_menudraw_.Subtitle = subtitle
	Tasksync.MenuCheckGlare(_menudraw_.Glare)
end 

Tasksync.GetMouseHoverSlot = function()
	return _menudraw_.MouseHoverSlot
end 

Tasksync.MenuDrawRender = function()
	RequestStreamedTextureDict( "commonmenu" )
	while not HasStreamedTextureDictLoaded("commonmenu") do Wait(0) end
	Tasksync.SetKeyGroupActive("GROUP_TASKSYNC_DRAWMENU",true)
	Tasksync.addlooponce("tasksync_drawmenu",0,function()
		local maxslot = _menudraw_.Maxslot
		SetScriptGfxDrawOrder(0)
		SetScriptGfxAlign(76, 84);
		SetScriptGfxAlignParams(-0.05, -0.05, 0.0, 0.0);
		_ResetRects(basicy)
		--_drawMenuRect(titleHeight, 178)
		_drawMenuSprite("interaction_bgd",titleHeight, 0, 0.0, 255)
		local subtitley = _drawMenuRect(buttonHeight, 140, 0.0, 220)
		_drawMenuTextShadow(_menudraw_.Title , basicx, basicy + 0.03 , basicfont,0, 0.5)
		_drawMenuText(_menudraw_.Subtitle , basicx, basicbuttony, buttonFont, 9, buttonScale)
		local bts = Tasksync.MenuDrawGetButtons()
		local btsT = #bts
		if btsT > 0 then 
			local isScroll = _menudraw_.ShouldScroll
			local selection = Tasksync.MenuDrawGetFocusSlot()
			if isScroll then 
				_drawMenuText_Right(selection .. ' / '..btsT, basicx + getmenuWidth(), basicbuttony, buttonFont, 9, buttonScale) 
				_drawMenuSprite("Gradient_Bgd", buttonHeight * maxslot, 0, 0.0, 255)
			else 
				_drawMenuSprite("Gradient_Bgd", buttonHeight * btsT, 0, 0.0, 255)
			end 
			local from, to = 1, maxslot 
			if isScroll and selection > maxslot then 
				from, to = selection-(maxslot-1),selection
			end 
			local cx,cy = GetNuiCursorPosition()
			local sw,sh = GetActiveScreenResolution()
			local csx,csy = cx/sw,cy/sh
			local hoverslot = -1
			local n = 0
			for i = from, to, 1 do 
				n = n + 1
				local righttextarray,optionselection = Tasksync.MenuDrawGetButtonOptions(i)
				local icon = Tasksync.MenuDrawGetButtonIcon(i)
				local bx,by,bw,bh = _drawButton(basicbuttony + buttonHeight * n,bts[i],righttextarray,optionselection,icon,selection,i)
				if _menudraw_.ShowMouse then 
					if (csx > bx and csx < bw) and (csy > by - bh and csy < by) then 
						hoverslot = i 
					end 
				end 
			end 
			if _menudraw_.ShowMouse  then
				_menudraw_.MouseHoverSlot = hoverslot 
				SetMouseCursorActiveThisFrame()
			end 
			if isScroll then 
				_initMenuScroll()
			end 
			_setMenuDescription(Tasksync.MenuDrawGetButtonDescription(selection))
		end 
		ResetScriptGfxAlign();
	end,function()
		Tasksync.SetKeyGroupActive("GROUP_TASKSYNC_DRAWMENU",false)
		if _menudraw_.Glare and Tasksync.ScaleformEnd then 
			Tasksync.ScaleformEnd("MP_MENU_GLARE")
			_menudraw_.Glare = false 
			Tasksync.MenuCheckGlare(_menudraw_.Glare)
		end 
		
	end)
end 
Tasksync.MenuDrawGetIcon = function(icontype, ed) --max:61 dont use it in loop/draws
	local icons = {}
	local icontype = icontype + 1
	
	icons = {
		{"",""},
		{"shop_NEW_Star","shop_NEW_Star"},
		{"shop_NEW_Star","shop_NEW_Star"},
		{"MP_hostCrown","MP_hostCrown"},
		{"Shop_Tick_Icon","Shop_Tick_Icon"},
		{"Shop_Box_TickB","Shop_Box_Tick"},
		{"Shop_Box_CrossB","Shop_Box_Cross"},
		{"Shop_Box_BlankB","Shop_Box_Blank"},
		{"shop_NEW_Star","shop_NEW_Star"},
		{"Shop_Clothing_Icon_B","Shop_Clothing_Icon_A"},
		{"Shop_GunClub_Icon_B","Shop_GunClub_Icon_A"},
		{"Shop_Tattoos_Icon_B","Shop_Tattoos_Icon_A"},
		{"Shop_Garage_Icon_B","Shop_Garage_Icon_A"},
		{"Shop_Garage_Bike_Icon_B","Shop_Garage_Bike_Icon_A"},
		{"Shop_Barber_Icon_B","Shop_Barber_Icon_A"},
		{"shop_Lock","shop_Lock"},
		{"Shop_Tick_Icon","Shop_Tick_Icon"},
		{"Shop_Ammo_Icon_B","Shop_Ammo_Icon_A"},
		{"Shop_Armour_Icon_B","Shop_Armour_Icon_A"},
		{"Shop_Health_Icon_B","Shop_Health_Icon_A"},
		{"Shop_MakeUp_Icon_B","Shop_MakeUp_Icon_A"},
		{"MP_SpecItem_Coke","MP_SpecItem_Coke"},
		{"MP_SpecItem_Heroin","MP_SpecItem_Heroin"},
		{"MP_SpecItem_Weed","MP_SpecItem_Weed"},
		{"MP_SpecItem_Meth","MP_SpecItem_Meth"},
		{"MP_SpecItem_Cash","MP_SpecItem_Cash"},
		{"arrowleft","arrowleft"},
		{"arrowright","arrowright"},
		{"MP_AlertTriangle","MP_AlertTriangle"},
		{"shop_NEW_Star","shop_NEW_Star"},
		{"Shop_Michael_Icon_B","Shop_Michael_Icon_A"},
		{"Shop_Franklin_Icon_B","Shop_Franklin_Icon_A"},
		{"Shop_Trevor_Icon_B","Shop_Trevor_Icon_A"},
		{"SaleIcon","SaleIcon"},
		{"Shop_Tick_Icon","Shop_Tick_Icon"},
		{"shop_NEW_Star","shop_NEW_Star"},
		{"Shop_Lock_Arena","Shop_Lock_Arena"},
		{"Card_Suit_Clubs","Card_Suit_Clubs"},
		{"Card_Suit_Hearts","Card_Suit_Hearts"},
		{"Card_Suit_Spades","Card_Suit_Spades"},
		{"Card_Suit_Diamonds","Card_Suit_Diamonds"},
		{"Shop_Art_Icon_B","Shop_Art_Icon_A"},
		{"Shop_Art_Icon_B","Shop_Art_Icon_A"},
		{"Shop_Chips_A","Shop_Chips_B"}
	}
	if ed then
		return icons[icontype][0];
	end
	return icons[icontype][1];
end
end 